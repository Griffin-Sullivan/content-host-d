---
# This playbook will setup a docker-ized content host deployment
# environment on the target server.
# Prerequisites:
# - If you are using rhel host, make sure you supply valid values for
#   RHN_USERNAME, RHN_PASSWORD, RHN_POOLID in this playbook
# - Make sure you are in content-host-d/playbooks directory and run
# - # ansible-playbook chd-setup.yaml
#
# After completion, a RHEL 7.4 docker image will be available.
- hosts: all
  remote_user: root
  vars:
    RHN_USERNAME: changeme
    RHN_PASSWORD: changeme
    RHN_POOLID: changeme
    REGISTER_TO_PORTAL: true
    # CUSTOM_CONTAINER_STARTUP_FILE should point to the URL of the custom container startup file
    # eg., http://example.com/startup.sh
    CUSTOM_CONTAINER_STARTUP_FILE: none
    # CONTAINER_OS should be one of the following:
    # RHEL7, RHEL72, RHEL7-Guest, RHEL6
    # CentOS5, CentOS6, CentOS7
    # OpenSuse, SLES11, SLES12
    CONTAINER_OS: RHEL7
    WORKSPACE: changeme
  tasks:
    - name : Register and Subscribe to Red Hat portal
      command: subscription-manager register --force --username={{ RHN_USERNAME }} --password={{ RHN_PASSWORD }}
      when: REGISTER_TO_PORTAL
    - name: Attach right subscription pool
      command: subscription-manager attach --pool {{ RHN_POOLID }}
      when: REGISTER_TO_PORTAL
    - name: Enable extras repo
      command: subscription-manager repos --enable rhel-{{ ansible_distribution_major_version }}-server-extras-rpms
      when: REGISTER_TO_PORTAL

    - name: Install Docker
      package: name=docker state=latest
    - service: name=docker state=started enabled=yes

    - name: Install python pip
      easy_install: name=pip
    - name: Install docker-py
      pip: name=docker-py state=latest

    - name: copy docker files for {{ CONTAINER_OS }}
      copy:
        src: "{{ WORKSPACE }}/{{ CONTAINER_OS }}/"
        dest: "/content-host-d/{{ CONTAINER_OS }}"
    - name: download custom container startup file
      get_url:
        url: "{{ CUSTOM_CONTAINER_STARTUP_FILE }}"
        dest: "/content-host-d/{{ CONTAINER_OS }}/startup.sh"
        force: yes
        mode: 0755
      when: CUSTOM_CONTAINER_STARTUP_FILE != "none"
    - name: Build {{ CONTAINER_OS }} content host image
      docker_image:
        path: "/content-host-d/{{ CONTAINER_OS }}/"
        name: ch-d
        tag: "{{ CONTAINER_OS|lower }}"

    - name: copy flood.py
      copy:
        src: "{{ WORKSPACE }}/flood.py"
        dest: /content-host-d/
        mode: 0755
